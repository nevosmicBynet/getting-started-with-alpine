name: external api to space
on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Enter docker image tag, it will be deployed to kebermad - hello kubernetes second'
        required: true
        default: 'docker tag here...'
env:
  REGISTRY: ghcr.io
  USERNAME: nevosmicBynet
  REPOSITORY: bteam123/alpine-get-started
# name: Create and publish a Docker image with security check using Snyk and Sonar
# 
# on:
#   pull_request:
#     types: [closed]
#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

jobs:
  setUp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 
#      - name: Declare some variables
#        shell: bash
#        run: |
#          echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
#          echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"

      - id: commit
        uses: prompt/actions-commit-hash@v3
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ env.USERNAME }}
          password: ${{ secrets.GHCR_PAT }}
          registry: ${{ env.REGISTRY }}
          repository: ${{ env.REPOSITORY }}
          tags: ${{github.event.inputs.name}}-${{ steps.commit.outputs.short }}

      - name: Checkout Target Repository
        uses: actions/checkout@v3
        with:
          repository: nevosmicBynet/ExampleChart
          path: main
          token: ${{ secrets.GHCR_PAT }} 
  
      - name: Get Image Tag
        id: get-image-tag
        run: echo "{image_tag}=${{ github.event.inputs.name}}-${{ steps.commit.outputs.short }}" >> $GITHUB_OUTPUT

      - name: Update Image Version in the related HelmChart values.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: '/values.yaml'
          propertyPath: 'image.tag'
          value: ${{ steps.get-image-tag.outputs.image_tag }}
          repository: nevosmicBynet/ExampleChart
          branch: main
          targetBranch: main
          createPR: true
          message: 'Update Image Version to ${{ steps.get-image-tag.outputs.image_tag }}'
          token: ${{ secrets.GHCR_PAT }}
          workDir: main

#      - name: Bump version and push tag
#        id: versioning
#        uses: anothrNick/github-tag-action@1.55.0 
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          WITH_V: true
#          DEFAULT_BUMP: PATCH
#          INITIAL_VERSION: 0.0.1

#      - name: Setup-Node  
#        uses: actions/setup-node@v3
#      - run: npm ci
#      - run: npm run build --if-present

  # sonarScan:
  #   needs: setUp
  #   uses: nevosmicBynet/getting-started-with-alpine/.github/workflows/reusable-SonarQube.yml@main
  #   secrets:
  #     mygithub_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     mysonar_TOKEN: ${{ secrets.SONAR_TOKEN }} 
   
# docker:
#   needs: setUp
#   uses: nevosmicBynet/getting-started-with-alpine/.github/workflows/reusable-docker.yml@main
#   with:
#     new_tag: ${{ needs.setUp.outputs.output_tag }}
#   secrets:
#     mydocker_user_name: ${{ secrets.DOCKER_USER_NAME }}
#     mydocker_password: ${{ secrets.DOCKER_PASSWORD }}
#     mysnyk_token : ${{ secrets.SNYK_TOKEN }}
#
# release:
#   needs: [docker,setUp]
#   runs-on: ubuntu-latest
#   steps:
#     - name: Release GitHub Actions
#       uses: technote-space/release-github-actions@v6
#     - name: Echo commit sha to file
#       run: |
#         echo ${{ github.sha }} > Release.txt
#         echo ${{ github.ref }} >> Release.txt
#     - name: Test
#       run: cat Release.txt
#     - name: Release
#       uses: softprops/action-gh-release@v1
#       with:
#         tag_name: ${{ needs.setUp.outputs.output_tag }}
#    
        
        
