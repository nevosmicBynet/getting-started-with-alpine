name: Create and publish a Docker image with security check using Snyk

on:
  push:
    branches: [ "sonar_scan" ]
  pull_request:
    branches: [ "sonar_scan" ]

jobs:
  security:
    name: SNYK & SONAR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup-Node  
        uses: actions/setup-node@v3
      - run: npm ci
      - run: npm run build --if-present
      - name: Run Snyk PYTHON to check for vulnerabilities
        uses: snyk/actions/python-3.8@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
      - name: Run Snyk NODE to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      # Optionally you can use the output from the Quality Gate in another step.
      # The possible outputs of the `quality-gate-status` variable are `PASSED`, `WARN` or `FAILED`.
      - name: "Example show SonarQube Quality Gate Status value"
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

  build-container:
    needs: [security]
    name: Build nginx container image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3    
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 
      - name: Build Docker image
        run: docker build -t michaln28/alpine-get-started:v-${{ github.run_number }} .
      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: michaln28/alpine-get-started:v-${{ github.run_number }}  
          # command:  --prune-repeated-subdependencies
      - name: Push Docker image
        run: docker push michaln28/alpine-get-started:v-${{ github.run_number }}
      
        
        
